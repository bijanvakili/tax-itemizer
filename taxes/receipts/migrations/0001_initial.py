# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-29 19:15
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import taxes.receipts.constants
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExclusionCondition',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prefix', models.CharField(db_index=True, max_length=200, null=True)),
                ('on_date', models.DateField(db_index=True, null=True)),
                ('amount', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'exclusion_condition',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('description', models.TextField()),
                ('type', enumfields.fields.EnumField(enum=taxes.receipts.constants.PaymentMethod, max_length=11)),
                ('safe_numeric_id', models.CharField(db_index=True, max_length=4)),
                ('currency', enumfields.fields.EnumField(enum=taxes.receipts.constants.Currency, max_length=3)),
            ],
            options={
                'db_table': 'payment_method',
            },
        ),
        migrations.CreateModel(
            name='PeriodicPayment',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, null=True)),
                ('currency', enumfields.fields.EnumField(enum=taxes.receipts.constants.Currency, max_length=3)),
                ('amount', models.IntegerField()),
            ],
            options={
                'db_table': 'periodic_payment',
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('purchased_at', models.DateField(db_index=True)),
                ('total_amount', models.IntegerField()),
                ('currency', enumfields.fields.EnumField(enum=taxes.receipts.constants.Currency, max_length=3)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipts.PaymentMethod')),
            ],
            options={
                'db_table': 'receipt',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('type', enumfields.fields.EnumField(db_index=True, enum=taxes.receipts.constants.ExpenseType, max_length=14)),
                ('fixed_amount', models.IntegerField(default=None, null=True)),
            ],
            options={
                'db_table': 'vendor',
            },
        ),
        migrations.CreateModel(
            name='VendorAliasPattern',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pattern', models.CharField(db_index=True, max_length=200, unique=True)),
                ('match_operation', enumfields.fields.EnumField(db_index=True, default='like', enum=taxes.receipts.constants.AliasMatchOperation, max_length=5)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alias_patterns', to='receipts.Vendor')),
            ],
            options={
                'db_table': 'vendor_alias_pattern',
            },
        ),
        migrations.CreateModel(
            name='VendorSite',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address', django.contrib.postgres.fields.jsonb.JSONField()),
                ('contact_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='receipts.Vendor')),
            ],
            options={
                'db_table': 'vendor_site',
            },
        ),
        migrations.AddField(
            model_name='receipt',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_receipts', to='receipts.Vendor'),
        ),
        migrations.AddField(
            model_name='periodicpayment',
            name='vendor',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='receipts.Vendor'),
        ),
        migrations.AlterIndexTogether(
            name='periodicpayment',
            index_together=set([('currency', 'amount')]),
        ),
    ]
