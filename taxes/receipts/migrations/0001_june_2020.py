# Generated by Django 3.0.4 on 2020-06-06 23:58

from django.db import migrations, models
import django.db.models.deletion
import taxes.receipts.models.models
import uuid


class Migration(migrations.Migration):

    replaces = [('receipts', '0001_initial'), ('receipts', '0002_blank_fields'), ('receipts', '0003_auto_20170708_1923'), ('receipts', '0004_auto_20170806_0245'), ('receipts', '0005_auto_20171113_0743'), ('receipts', '0006_auto_20180106_0612'), ('receipts', '0007_auto_20180221_1541'), ('receipts', '0008_auto_20180415_0133'), ('receipts', '0009_invert_fx_pairs'), ('receipts', '0010_expense_type'), ('receipts', '0011_vendoraliaspattern_default_expense_type'), ('receipts', '0012_asset_primaryresidence'), ('receipts', '0013_auto_20190313_0620'), ('receipts', '0014_auto_20190313_0655'), ('receipts', '0015_auto_20190422_0503'), ('receipts', '0016_rename_transaction_20190607_0624'), ('receipts', '0017_extend_transaction_20190609_0322'), ('receipts', '0018_auto_20190610_0355'), ('receipts', '0019_replace_enum_with_textchoice')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('description', models.TextField()),
                ('method_type', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card')], max_length=11)),
                ('safe_numeric_id', models.CharField(blank=True, db_index=True, max_length=4, null=True)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('CAD', 'CAD')], max_length=3)),
                ('file_prefix', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('parser_class', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'payment_method',
            },
        ),
        migrations.CreateModel(
            name='FinancialAsset',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('asset_type', models.CharField(choices=[('rental', 'Rental'), ('employment', 'Employment'), ('proprietorship', 'Proprietorship'), ('primary_residence', 'Primary Residence')], max_length=17)),
            ],
            options={
                'db_table': 'financial_asset',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('fixed_amount', models.IntegerField(blank=True, default=None, null=True)),
                ('assigned_asset', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_vendors', to='receipts.FinancialAsset')),
                ('tax_adjustment_type', models.CharField(blank=True, choices=[('hst', 'HST')], max_length=3, null=True)),
                ('default_expense_type', models.CharField(blank=True, choices=[('ignore', '*IGNORE*'), ('property_tax', 'Property Tax'), ('interest', 'Interest'), ('insurance', 'Insurance'), ('utility', 'Telephone and Utilities'), ('administrative', 'Management and Administrative'), ('maintenance', 'Repair and Maintenance'), ('travel', 'Business Travel'), ('meals', 'Meals and Entertainment'), ('supplies', 'Office Supplies'), ('rent', 'Gross Rent'), ('foreign_income', 'Foreign Income'), ('capital_gains', 'Capital Gains'), ('advertising', 'Advertising'), ('donation', 'Donations')], db_index=True, max_length=23, null=True)),
            ],
            options={
                'db_table': 'vendor',
            },
        ),
        migrations.CreateModel(
            name='ForexRate',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pair', models.CharField(max_length=8)),
                ('effective_at', models.DateField(db_index=True)),
                ('rate', models.DecimalField(decimal_places=4, max_digits=10)),
            ],
            options={
                'db_table': 'forex_rate',
                'unique_together': {('pair', 'effective_at')},
            },
        ),
        migrations.CreateModel(
            name='ExclusionCondition',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prefix', models.CharField(blank=True, db_index=True, max_length=200, null=True, validators=[taxes.receipts.models.models.validate_uppercase])),
                ('on_date', models.DateField(blank=True, db_index=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'exclusion_condition',
            },
        ),
        migrations.CreateModel(
            name='PeriodicPayment',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, null=True)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('CAD', 'CAD')], max_length=3)),
                ('amount', models.IntegerField()),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='periodic_payment', to='receipts.Vendor')),
            ],
            options={
                'db_table': 'periodic_payment',
                'index_together': {('currency', 'amount')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_date', models.DateField(db_index=True)),
                ('total_amount', models.IntegerField()),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('CAD', 'CAD')], max_length=3)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='receipts.PaymentMethod')),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='client_receipts', to='receipts.Vendor')),
                ('expense_type', models.CharField(choices=[('ignore', '*IGNORE*'), ('property_tax', 'Property Tax'), ('interest', 'Interest'), ('insurance', 'Insurance'), ('utility', 'Telephone and Utilities'), ('administrative', 'Management and Administrative'), ('maintenance', 'Repair and Maintenance'), ('travel', 'Business Travel'), ('meals', 'Meals and Entertainment'), ('supplies', 'Office Supplies'), ('rent', 'Gross Rent'), ('foreign_income', 'Foreign Income'), ('capital_gains', 'Capital Gains'), ('advertising', 'Advertising'), ('donation', 'Donations')], max_length=23, null=True)),
                ('description', models.TextField(default='*UNKNOWN*')),
            ],
            options={
                'db_table': 'receipt',
            },
        ),
        migrations.CreateModel(
            name='TaxAdjustment',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tax_type', models.CharField(choices=[('hst', 'HST')], max_length=3)),
                ('amount', models.IntegerField()),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_adjustments', to='receipts.Transaction')),
            ],
            options={
                'db_table': 'tax_adjustment',
                'ordering': ('receipt__transaction_date', 'receipt__vendor__name', 'tax_type'),
            },
        ),
        migrations.CreateModel(
            name='VendorAliasPattern',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pattern', models.CharField(db_index=True, max_length=200, unique=True)),
                ('match_operation', models.CharField(choices=[('equal', 'Equal'), ('like', 'Like')], db_index=True, default='like', max_length=5)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alias_patterns', to='receipts.Vendor')),
                ('default_expense_type', models.CharField(blank=True, choices=[('ignore', '*IGNORE*'), ('property_tax', 'Property Tax'), ('interest', 'Interest'), ('insurance', 'Insurance'), ('utility', 'Telephone and Utilities'), ('administrative', 'Management and Administrative'), ('maintenance', 'Repair and Maintenance'), ('travel', 'Business Travel'), ('meals', 'Meals and Entertainment'), ('supplies', 'Office Supplies'), ('rent', 'Gross Rent'), ('foreign_income', 'Foreign Income'), ('capital_gains', 'Capital Gains'), ('advertising', 'Advertising'), ('donation', 'Donations')], db_index=True, max_length=23, null=True)),
            ],
            options={
                'db_table': 'vendor_alias_pattern',
            },
        ),
    ]
